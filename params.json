{"name":"LightBus","tagline":"LightBus is a lightweight in-process bus","body":"#LightBus\r\n\r\n**LightBus** is a lightweight in-process bus, which pretty much makes it an implementation of the mediator pattern. **LightBus**, insipired by [NServiceBus](http://www.particular.net/) and the CQRS pattern, allows you to send messages (commands, events, queries) to registered recipients in a decoupled manner. Recipients, i.e. message handlers, are defined by marker interfaces and lets you encapsulate business operations in a single class, which in turn is registered and instantiated by an IoC container. \r\n\r\nTypical use case is directly behind your service boundary, for example server side behind a service interface like ASP.NET Web Api, ASP.NET MVC, Nancy, ServiceStack, WCF etc. \r\n\r\n**LightBus** is all async and uses the Task Parallell Library which means that you could use async/await on .NET 4.5. Still, **LightBus** targets .NET 4.0\r\n\r\n##Installation through NuGet\r\n```PM> Install-Package LightBus```\r\n\r\n##How do I get started?\r\nCheck out the [wiki](https://github.com/kvarv/LightBus/wiki)!\r\n","google":"UA-49181110-1","note":"Don't delete this file! It's used internally to help with page regeneration."}